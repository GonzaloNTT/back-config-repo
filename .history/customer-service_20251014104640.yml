server:
  port: 8082

spring:
  application:
    name: customer-service
  config:
    import: optional:configserver:http://config-server:8888
  webflux:
    base-path: /api/v1
  data:
    mongodb:
      uri: mongodb+srv://xaleons72_db_user:YKJLPRL4giDOswys@cluster0.bst1l3t.mongodb.net/customerDB?retryWrites=true&w=majority&appName=Cluster0
    redis:
      host: redis
      port: 6379

kafka:
  bootstrap-servers: kafka:9092
  properties:
    schema.registry.url: http://schema-registry:8081
  producer:
    key-serializer: org.apache.kafka.common.serialization.StringSerializer
    value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  consumer:
    group-id: customer-service-group
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    properties:
      specific.avro.reader: true
  topics:
    customerCreated: customer-created
  groups:
    customerService: customer-service-group

eureka:
  client:
    service-url:
      defaultZone: http://admin:admin@eureka-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true
